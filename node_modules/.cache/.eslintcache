[{"D:\\GitHub\\portfolio-react\\src\\index.js":"1","D:\\GitHub\\portfolio-react\\src\\reportWebVitals.js":"2","D:\\GitHub\\portfolio-react\\src\\pages\\404.js":"3","D:\\GitHub\\portfolio-react\\src\\pages\\Home.js":"4","D:\\GitHub\\portfolio-react\\src\\pages\\Projects.js":"5","D:\\GitHub\\portfolio-react\\src\\pages\\Gallery.js":"6","D:\\GitHub\\portfolio-react\\src\\pages\\About.js":"7","D:\\GitHub\\portfolio-react\\src\\pages\\Topdown.js":"8","D:\\GitHub\\portfolio-react\\src\\pages\\Rhythm.js":"9","D:\\GitHub\\portfolio-react\\src\\components\\Navbar.js":"10","D:\\GitHub\\portfolio-react\\src\\components\\CC.js":"11","D:\\GitHub\\portfolio-react\\src\\hooks\\UseTitle.js":"12"},{"size":2513,"mtime":1668562094975,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1652007779729,"results":"15","hashOfConfig":"14"},{"size":397,"mtime":1668407548114,"results":"16","hashOfConfig":"14"},{"size":359,"mtime":1668406539483,"results":"17","hashOfConfig":"14"},{"size":3112,"mtime":1668575281613,"results":"18","hashOfConfig":"14"},{"size":6502,"mtime":1668575193121,"results":"19","hashOfConfig":"14"},{"size":709,"mtime":1668561009372,"results":"20","hashOfConfig":"14"},{"size":649,"mtime":1668425194164,"results":"21","hashOfConfig":"14"},{"size":884,"mtime":1667539773982,"results":"22","hashOfConfig":"14"},{"size":1467,"mtime":1668562207469,"results":"23","hashOfConfig":"14"},{"size":1154,"mtime":1668408623467,"results":"24","hashOfConfig":"14"},{"size":260,"mtime":1668562178862,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o4pvrl",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\portfolio-react\\src\\index.js",[],[],"D:\\GitHub\\portfolio-react\\src\\reportWebVitals.js",[],[],"D:\\GitHub\\portfolio-react\\src\\pages\\404.js",[],[],"D:\\GitHub\\portfolio-react\\src\\pages\\Home.js",[],[],"D:\\GitHub\\portfolio-react\\src\\pages\\Projects.js",[],[],"D:\\GitHub\\portfolio-react\\src\\pages\\Gallery.js",["64","65","66"],[],"import './App.css';\r\nimport {React, useState } from 'react';\r\nimport CC from '../components/CC';\r\nimport { useTitle } from '../hooks/UseTitle';\r\n\r\n\r\n\r\n//#region GALLERY VIEW\r\nfunction Tile(props){\r\n    return (\r\n        <div className=' gallery_tile '>\r\n        <a href={props.fullResSrc}><img \r\n        src={props.src}></img>\r\n        </a>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction DisplayGallery(){\r\n    return(\r\n        <div className='gallery_container'>\r\n            {\r\n                // Get all images in location and create Tiles from them\r\n                require.context('../images/Gallery', false, /\\.(png|jpe?g|JPG|svg)$/).keys().map((item, index) => {\r\n                    let name = String(item).substring(1);\r\n                    return (\r\n                        <Tile \r\n                        key={index} \r\n                        src={require(\"../images/Gallery\"+name)}\r\n                        fullResSrc={require(\"../images/FullSizeGallery\"+name)}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n//#endregion\r\n\r\n//#region CARDS VIEW\r\n\r\nlet numCards;\r\nlet activeIndex;\r\n\r\n// Swapping buttons\r\nfunction HandleCardButtons(e){\r\n    if(e.target.value === \"left\") // LEFT button\r\n    {\r\n        // Get next card indecies to left with overflow\r\n        const nextIndex = activeIndex - 1 >= 0 ? activeIndex - 1 : numCards;\r\n        const secondNextIndex = nextIndex - 1 >= 0 ? nextIndex - 1 : numCards;\r\n\r\n        // Get div objects of required cards\r\n        const currCard = document.querySelector(`[data-index=\"${activeIndex}\"]`);\r\n        const nextCard = document.querySelector(`[data-index=\"${nextIndex}\"]`);\r\n        const secondNextCard = document.querySelector(`[data-index=\"${secondNextIndex}\"]`);\r\n\r\n        // Change status of cards to shift to left\r\n        currCard.setAttribute(\"data-status\", \"right\");\r\n        nextCard.setAttribute(\"data-status\", \"active\");\r\n        secondNextCard.setAttribute(\"data-status\", \"left\");\r\n\r\n        // Update active index\r\n        activeIndex = nextIndex;\r\n    }\r\n    else{ // RIGHT button\r\n        // Get next card indecies to right with overflow\r\n        const nextIndex = activeIndex + 1 <= numCards ? activeIndex + 1 : 0;\r\n        const secondNextIndex = nextIndex + 1 <= numCards ? nextIndex + 1 : 0;\r\n\r\n        // Get div objects of required cards\r\n        const currCard = document.querySelector(`[data-index=\"${activeIndex}\"]`);\r\n        const nextCard = document.querySelector(`[data-index=\"${nextIndex}\"]`);\r\n        const secondNextCard = document.querySelector(`[data-index=\"${secondNextIndex}\"]`);\r\n\r\n        // Change status of cards to shift to right\r\n        currCard.setAttribute(\"data-status\", \"left\");\r\n        nextCard.setAttribute(\"data-status\", \"active\");\r\n        secondNextCard.setAttribute(\"data-status\", \"right\");\r\n\r\n        // Update active index\r\n        activeIndex = nextIndex; \r\n    }\r\n\r\n}\r\n\r\nfunction Card(props){\r\n    return(\r\n        <div \r\n        data-status={props.status} // Whether it is active, left, right, or unknown\r\n        data-index={props.key} // THe position of the card in the stack on initialisation\r\n        className='card'>\r\n            <a href={props.fullResSrc} target=\"_blank\">\r\n                <img src={props.src} />\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DisplayCards(){\r\n    return(\r\n        <div className='cards-container'>\r\n             {\r\n                // Get all images in location and create Cards from them\r\n                require.context('../images/Gallery', false, /\\.(png|jpe?g|JPG|svg)$/).keys().map((item, index) => {\r\n                    let name = String(item).substring(1);\r\n                    // If last card, return with \"active\" tag\r\n                    if( Number(index) === Number(require.context('../images/Gallery', false, /\\.(png|jpe?g|JPG|svg)$/).keys().length-1)){\r\n                        numCards = index;\r\n                        activeIndex = index;\r\n                        return (\r\n                            <Card \r\n                            key={index}\r\n                            status=\"active\"\r\n                            src={require(\"../images/Gallery\"+name)}\r\n                            fullResSrc={require(\"../images/FullSizeGallery\"+name)}\r\n                            />\r\n                        );\r\n                    }\r\n                    // If not last card return with \"unknown\" tag\r\n                    return (\r\n                        <Card \r\n                        status=\"unknown\"\r\n                        key={index}\r\n                        src={require(\"../images/Gallery\"+name)}\r\n                        fullResSrc={require(\"../images/FullSizeGallery\"+name)}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n            {/* Buttons handling card changing */}\r\n            <div className='cards-btn-container'>\r\n                <button onClick={HandleCardButtons} value={\"left\"}>&#8612;</button>\r\n                <button onClick={HandleCardButtons} value={\"right\"}>&#8614;</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//#endregion\r\n\r\n/// FINAL FUNCTION ///\r\nfunction Gallery() {\r\n    useTitle(\"Photography\");\r\n    const [displayMethod, setDisplayMethod] = useState(1, Number);\r\n\r\n    // When the dropdown box is changed, change the display method\r\n    function HandleChange(e){\r\n        setDisplayMethod(Number(e.target.value));\r\n    }\r\n\r\n    // Dropdown box for display method\r\n    function DisplaySelector(){\r\n        return(\r\n            <div className='select-center-container'>\r\n                <select value={displayMethod} onChange={HandleChange}>\r\n                    <option value={1}>Gallery</option>\r\n                    <option value={2}>Cards</option>\r\n                    {/* <option value={3}>Op3</option> */}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    let display; // The display to use\r\n\r\n    // Default option, gallery. Shows all images at once\r\n    if (displayMethod === 1){\r\n        display = <DisplayGallery/>\r\n    }\r\n    // Cards display, shows one at a time with swap buttons\r\n    else if (displayMethod === 2){\r\n        console.log(\"Cards\");\r\n        display = <DisplayCards/>\r\n    }\r\n    else{\r\n        display = null;\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h1>Photography</h1>\r\n            <DisplaySelector/>\r\n            {display}\r\n            <CC/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Gallery;\r\n",[],"D:\\GitHub\\portfolio-react\\src\\pages\\About.js",[],[],"D:\\GitHub\\portfolio-react\\src\\pages\\Topdown.js",[],[],"D:\\GitHub\\portfolio-react\\src\\pages\\Rhythm.js",[],[],"D:\\GitHub\\portfolio-react\\src\\components\\Navbar.js",[],[],"D:\\GitHub\\portfolio-react\\src\\components\\CC.js",["67","68","69"],[],"D:\\GitHub\\portfolio-react\\src\\hooks\\UseTitle.js",[],[],{"ruleId":"70","severity":1,"message":"71","line":12,"column":36,"nodeType":"72","endLine":13,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":94,"column":13,"nodeType":"72","messageId":"75","endLine":94,"endColumn":56,"fix":"76"},{"ruleId":"70","severity":1,"message":"71","line":95,"column":17,"nodeType":"72","endLine":95,"endColumn":40},{"ruleId":"70","severity":1,"message":"71","line":21,"column":13,"nodeType":"72","endLine":22,"endColumn":93},{"ruleId":"70","severity":1,"message":"71","line":23,"column":13,"nodeType":"72","endLine":24,"endColumn":95},{"ruleId":"70","severity":1,"message":"71","line":25,"column":13,"nodeType":"72","endLine":26,"endColumn":95},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"77","text":"78"},[3255,3255]," rel=\"noreferrer\""]